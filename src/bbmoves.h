/**
 * Maxima, a chess playing program. 
 * Copyright (C) 1996-2015 Erik van het Hof and Hermen Reitsma 
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *  
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *  
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, If not, see <http://www.gnu.org/licenses/>.
 * 
 * 
 * File: bbmoves.h
 * - Bitboards with (pseudo) moves per piece.
 * - Magic bitboards with credits and thanks to Pradyumna Kannan. The original 
 *   code for magic bitboards is available at his website. 
 * 
 * Note the function InitMagicMoves() needs to be called before using the engine.
 */

#ifndef _bbmovesh
#define _bbmovesh

#include "bits.h"

const U64 KING_MOVES[64] = {
    C64(0x0000000000000302), C64(0x0000000000000705), C64(0x0000000000000E0A), C64(0x0000000000001C14),
    C64(0x0000000000003828), C64(0x0000000000007050), C64(0x000000000000E0A0), C64(0x000000000000C040),
    C64(0x0000000000030203), C64(0x0000000000070507), C64(0x00000000000E0A0E), C64(0x00000000001C141C),
    C64(0x0000000000382838), C64(0x0000000000705070), C64(0x0000000000E0A0E0), C64(0x0000000000C040C0),
    C64(0x0000000003020300), C64(0x0000000007050700), C64(0x000000000E0A0E00), C64(0x000000001C141C00),
    C64(0x0000000038283800), C64(0x0000000070507000), C64(0x00000000E0A0E000), C64(0x00000000C040C000),
    C64(0x0000000302030000), C64(0x0000000705070000), C64(0x0000000E0A0E0000), C64(0x0000001C141C0000),
    C64(0x0000003828380000), C64(0x0000007050700000), C64(0x000000E0A0E00000), C64(0x000000C040C00000),
    C64(0x0000030203000000), C64(0x0000070507000000), C64(0x00000E0A0E000000), C64(0x00001C141C000000),
    C64(0x0000382838000000), C64(0x0000705070000000), C64(0x0000E0A0E0000000), C64(0x0000C040C0000000),
    C64(0x0003020300000000), C64(0x0007050700000000), C64(0x000E0A0E00000000), C64(0x001C141C00000000),
    C64(0x0038283800000000), C64(0x0070507000000000), C64(0x00E0A0E000000000), C64(0x00C040C000000000),
    C64(0x0302030000000000), C64(0x0705070000000000), C64(0x0E0A0E0000000000), C64(0x1C141C0000000000),
    C64(0x3828380000000000), C64(0x7050700000000000), C64(0xE0A0E00000000000), C64(0xC040C00000000000),
    C64(0x0203000000000000), C64(0x0507000000000000), C64(0x0A0E000000000000), C64(0x141C000000000000),
    C64(0x2838000000000000), C64(0x5070000000000000), C64(0xA0E0000000000000), C64(0x40C0000000000000)
};

const U64 QUEEN_MOVES[64] = {
    C64(0x81412111090503FE), C64(0x02824222120A07FD), C64(0x0404844424150EFB), C64(0x08080888492A1CF7),
    C64(0x10101011925438EF), C64(0x2020212224A870DF), C64(0x404142444850E0BF), C64(0x8182848890A0C07F),
    C64(0x412111090503FE03), C64(0x824222120A07FD07), C64(0x04844424150EFB0E), C64(0x080888492A1CF71C),
    C64(0x101011925438EF38), C64(0x20212224A870DF70), C64(0x4142444850E0BFE0), C64(0x82848890A0C07FC0),
    C64(0x2111090503FE0305), C64(0x4222120A07FD070A), C64(0x844424150EFB0E15), C64(0x0888492A1CF71C2A),
    C64(0x1011925438EF3854), C64(0x212224A870DF70A8), C64(0x42444850E0BFE050), C64(0x848890A0C07FC0A0),
    C64(0x11090503FE030509), C64(0x22120A07FD070A12), C64(0x4424150EFB0E1524), C64(0x88492A1CF71C2A49),
    C64(0x11925438EF385492), C64(0x2224A870DF70A824), C64(0x444850E0BFE05048), C64(0x8890A0C07FC0A090),
    C64(0x090503FE03050911), C64(0x120A07FD070A1222), C64(0x24150EFB0E152444), C64(0x492A1CF71C2A4988),
    C64(0x925438EF38549211), C64(0x24A870DF70A82422), C64(0x4850E0BFE0504844), C64(0x90A0C07FC0A09088),
    C64(0x0503FE0305091121), C64(0x0A07FD070A122242), C64(0x150EFB0E15244484), C64(0x2A1CF71C2A498808),
    C64(0x5438EF3854921110), C64(0xA870DF70A8242221), C64(0x50E0BFE050484442), C64(0xA0C07FC0A0908884),
    C64(0x03FE030509112141), C64(0x07FD070A12224282), C64(0x0EFB0E1524448404), C64(0x1CF71C2A49880808),
    C64(0x38EF385492111010), C64(0x70DF70A824222120), C64(0xE0BFE05048444241), C64(0xC07FC0A090888482),
    C64(0xFE03050911214181), C64(0xFD070A1222428202), C64(0xFB0E152444840404), C64(0xF71C2A4988080808),
    C64(0xEF38549211101010), C64(0xDF70A82422212020), C64(0xBFE0504844424140), C64(0x7FC0A09088848281)
};

const U64 ROOK_MOVES[64] = {
    C64(0x01010101010101FE), C64(0x02020202020202FD), C64(0x04040404040404FB), C64(0x08080808080808F7),
    C64(0x10101010101010EF), C64(0x20202020202020DF), C64(0x40404040404040BF), C64(0x808080808080807F),
    C64(0x010101010101FE01), C64(0x020202020202FD02), C64(0x040404040404FB04), C64(0x080808080808F708),
    C64(0x101010101010EF10), C64(0x202020202020DF20), C64(0x404040404040BF40), C64(0x8080808080807F80),
    C64(0x0101010101FE0101), C64(0x0202020202FD0202), C64(0x0404040404FB0404), C64(0x0808080808F70808),
    C64(0x1010101010EF1010), C64(0x2020202020DF2020), C64(0x4040404040BF4040), C64(0x80808080807F8080),
    C64(0x01010101FE010101), C64(0x02020202FD020202), C64(0x04040404FB040404), C64(0x08080808F7080808),
    C64(0x10101010EF101010), C64(0x20202020DF202020), C64(0x40404040BF404040), C64(0x808080807F808080),
    C64(0x010101FE01010101), C64(0x020202FD02020202), C64(0x040404FB04040404), C64(0x080808F708080808),
    C64(0x101010EF10101010), C64(0x202020DF20202020), C64(0x404040BF40404040), C64(0x8080807F80808080),
    C64(0x0101FE0101010101), C64(0x0202FD0202020202), C64(0x0404FB0404040404), C64(0x0808F70808080808),
    C64(0x1010EF1010101010), C64(0x2020DF2020202020), C64(0x4040BF4040404040), C64(0x80807F8080808080),
    C64(0x01FE010101010101), C64(0x02FD020202020202), C64(0x04FB040404040404), C64(0x08F7080808080808),
    C64(0x10EF101010101010), C64(0x20DF202020202020), C64(0x40BF404040404040), C64(0x807F808080808080),
    C64(0xFE01010101010101), C64(0xFD02020202020202), C64(0xFB04040404040404), C64(0xF708080808080808),
    C64(0xEF10101010101010), C64(0xDF20202020202020), C64(0xBF40404040404040), C64(0x7F80808080808080)
};

const U64 BISHOP_MOVES[64] = {
    C64(0x8040201008040200), C64(0x0080402010080500), C64(0x0000804020110A00), C64(0x0000008041221400),
    C64(0x0000000182442800), C64(0x0000010204885000), C64(0x000102040810A000), C64(0x0102040810204000),
    C64(0x4020100804020002), C64(0x8040201008050005), C64(0x00804020110A000A), C64(0x0000804122140014),
    C64(0x0000018244280028), C64(0x0001020488500050), C64(0x0102040810A000A0), C64(0x0204081020400040),
    C64(0x2010080402000204), C64(0x4020100805000508), C64(0x804020110A000A11), C64(0x0080412214001422),
    C64(0x0001824428002844), C64(0x0102048850005088), C64(0x02040810A000A010), C64(0x0408102040004020),
    C64(0x1008040200020408), C64(0x2010080500050810), C64(0x4020110A000A1120), C64(0x8041221400142241),
    C64(0x0182442800284482), C64(0x0204885000508804), C64(0x040810A000A01008), C64(0x0810204000402010),
    C64(0x0804020002040810), C64(0x1008050005081020), C64(0x20110A000A112040), C64(0x4122140014224180),
    C64(0x8244280028448201), C64(0x0488500050880402), C64(0x0810A000A0100804), C64(0x1020400040201008),
    C64(0x0402000204081020), C64(0x0805000508102040), C64(0x110A000A11204080), C64(0x2214001422418000),
    C64(0x4428002844820100), C64(0x8850005088040201), C64(0x10A000A010080402), C64(0x2040004020100804),
    C64(0x0200020408102040), C64(0x0500050810204080), C64(0x0A000A1120408000), C64(0x1400142241800000),
    C64(0x2800284482010000), C64(0x5000508804020100), C64(0xA000A01008040201), C64(0x4000402010080402),
    C64(0x0002040810204080), C64(0x0005081020408000), C64(0x000A112040800000), C64(0x0014224180000000),
    C64(0x0028448201000000), C64(0x0050880402010000), C64(0x00A0100804020100), C64(0x0040201008040201)
};

const U64 KNIGHT_MOVES[64] = {
    C64(0x0000000000020400), C64(0x0000000000050800), C64(0x00000000000A1100), C64(0x0000000000142200),
    C64(0x0000000000284400), C64(0x0000000000508800), C64(0x0000000000A01000), C64(0x0000000000402000),
    C64(0x0000000002040004), C64(0x0000000005080008), C64(0x000000000A110011), C64(0x0000000014220022),
    C64(0x0000000028440044), C64(0x0000000050880088), C64(0x00000000A0100010), C64(0x0000000040200020),
    C64(0x0000000204000402), C64(0x0000000508000805), C64(0x0000000A1100110A), C64(0x0000001422002214),
    C64(0x0000002844004428), C64(0x0000005088008850), C64(0x000000A0100010A0), C64(0x0000004020002040),
    C64(0x0000020400040200), C64(0x0000050800080500), C64(0x00000A1100110A00), C64(0x0000142200221400),
    C64(0x0000284400442800), C64(0x0000508800885000), C64(0x0000A0100010A000), C64(0x0000402000204000),
    C64(0x0002040004020000), C64(0x0005080008050000), C64(0x000A1100110A0000), C64(0x0014220022140000),
    C64(0x0028440044280000), C64(0x0050880088500000), C64(0x00A0100010A00000), C64(0x0040200020400000),
    C64(0x0204000402000000), C64(0x0508000805000000), C64(0x0A1100110A000000), C64(0x1422002214000000),
    C64(0x2844004428000000), C64(0x5088008850000000), C64(0xA0100010A0000000), C64(0x4020002040000000),
    C64(0x0400040200000000), C64(0x0800080500000000), C64(0x1100110A00000000), C64(0x2200221400000000),
    C64(0x4400442800000000), C64(0x8800885000000000), C64(0x100010A000000000), C64(0x2000204000000000),
    C64(0x0004020000000000), C64(0x0008050000000000), C64(0x00110A0000000000), C64(0x0022140000000000),
    C64(0x0044280000000000), C64(0x0088500000000000), C64(0x0010A00000000000), C64(0x0020400000000000)
};

const U64 WPAWN_MOVES[64] = {
    C64(0x0000000000000100), C64(0x0000000000000200), C64(0x0000000000000400), C64(0x0000000000000800),
    C64(0x0000000000001000), C64(0x0000000000002000), C64(0x0000000000004000), C64(0x0000000000008000),
    C64(0x0000000000010000), C64(0x0000000000020000), C64(0x0000000000040000), C64(0x0000000000080000),
    C64(0x0000000000100000), C64(0x0000000000200000), C64(0x0000000000400000), C64(0x0000000000800000),
    C64(0x0000000001000000), C64(0x0000000002000000), C64(0x0000000004000000), C64(0x0000000008000000),
    C64(0x0000000010000000), C64(0x0000000020000000), C64(0x0000000040000000), C64(0x0000000080000000),
    C64(0x0000000100000000), C64(0x0000000200000000), C64(0x0000000400000000), C64(0x0000000800000000),
    C64(0x0000001000000000), C64(0x0000002000000000), C64(0x0000004000000000), C64(0x0000008000000000),
    C64(0x0000010000000000), C64(0x0000020000000000), C64(0x0000040000000000), C64(0x0000080000000000),
    C64(0x0000100000000000), C64(0x0000200000000000), C64(0x0000400000000000), C64(0x0000800000000000),
    C64(0x0001000000000000), C64(0x0002000000000000), C64(0x0004000000000000), C64(0x0008000000000000),
    C64(0x0010000000000000), C64(0x0020000000000000), C64(0x0040000000000000), C64(0x0080000000000000),
    C64(0x0100000000000000), C64(0x0200000000000000), C64(0x0400000000000000), C64(0x0800000000000000),
    C64(0x1000000000000000), C64(0x2000000000000000), C64(0x4000000000000000), C64(0x8000000000000000),
    C64(0x0000000000000000), C64(0x0000000000000000), C64(0x0000000000000000), C64(0x0000000000000000),
    C64(0x0000000000000000), C64(0x0000000000000000), C64(0x0000000000000000), C64(0x0000000000000000)
};

const U64 BPAWN_MOVES[64] = {
    C64(0x0000000000000000), C64(0x0000000000000000), C64(0x0000000000000000), C64(0x0000000000000000),
    C64(0x0000000000000000), C64(0x0000000000000000), C64(0x0000000000000000), C64(0x0000000000000000),
    C64(0x0000000000000001), C64(0x0000000000000002), C64(0x0000000000000004), C64(0x0000000000000008),
    C64(0x0000000000000010), C64(0x0000000000000020), C64(0x0000000000000040), C64(0x0000000000000080),
    C64(0x0000000000000100), C64(0x0000000000000200), C64(0x0000000000000400), C64(0x0000000000000800),
    C64(0x0000000000001000), C64(0x0000000000002000), C64(0x0000000000004000), C64(0x0000000000008000),
    C64(0x0000000000010000), C64(0x0000000000020000), C64(0x0000000000040000), C64(0x0000000000080000),
    C64(0x0000000000100000), C64(0x0000000000200000), C64(0x0000000000400000), C64(0x0000000000800000),
    C64(0x0000000001000000), C64(0x0000000002000000), C64(0x0000000004000000), C64(0x0000000008000000),
    C64(0x0000000010000000), C64(0x0000000020000000), C64(0x0000000040000000), C64(0x0000000080000000),
    C64(0x0000000100000000), C64(0x0000000200000000), C64(0x0000000400000000), C64(0x0000000800000000),
    C64(0x0000001000000000), C64(0x0000002000000000), C64(0x0000004000000000), C64(0x0000008000000000),
    C64(0x0000010000000000), C64(0x0000020000000000), C64(0x0000040000000000), C64(0x0000080000000000),
    C64(0x0000100000000000), C64(0x0000200000000000), C64(0x0000400000000000), C64(0x0000800000000000),
    C64(0x0001000000000000), C64(0x0002000000000000), C64(0x0004000000000000), C64(0x0008000000000000),
    C64(0x0010000000000000), C64(0x0020000000000000), C64(0x0040000000000000), C64(0x0080000000000000)
};

const U64 WPAWN_CAPTURES[64] = {
    C64(0x0000000000000200), C64(0x0000000000000500), C64(0x0000000000000A00), C64(0x0000000000001400),
    C64(0x0000000000002800), C64(0x0000000000005000), C64(0x000000000000A000), C64(0x0000000000004000),
    C64(0x0000000000020000), C64(0x0000000000050000), C64(0x00000000000A0000), C64(0x0000000000140000),
    C64(0x0000000000280000), C64(0x0000000000500000), C64(0x0000000000A00000), C64(0x0000000000400000),
    C64(0x0000000002000000), C64(0x0000000005000000), C64(0x000000000A000000), C64(0x0000000014000000),
    C64(0x0000000028000000), C64(0x0000000050000000), C64(0x00000000A0000000), C64(0x0000000040000000),
    C64(0x0000000200000000), C64(0x0000000500000000), C64(0x0000000A00000000), C64(0x0000001400000000),
    C64(0x0000002800000000), C64(0x0000005000000000), C64(0x000000A000000000), C64(0x0000004000000000),
    C64(0x0000020000000000), C64(0x0000050000000000), C64(0x00000A0000000000), C64(0x0000140000000000),
    C64(0x0000280000000000), C64(0x0000500000000000), C64(0x0000A00000000000), C64(0x0000400000000000),
    C64(0x0002000000000000), C64(0x0005000000000000), C64(0x000A000000000000), C64(0x0014000000000000),
    C64(0x0028000000000000), C64(0x0050000000000000), C64(0x00A0000000000000), C64(0x0040000000000000),
    C64(0x0200000000000000), C64(0x0500000000000000), C64(0x0A00000000000000), C64(0x1400000000000000),
    C64(0x2800000000000000), C64(0x5000000000000000), C64(0xA000000000000000), C64(0x4000000000000000),
    C64(0x0000000000000000), C64(0x0000000000000000), C64(0x0000000000000000), C64(0x0000000000000000),
    C64(0x0000000000000000), C64(0x0000000000000000), C64(0x0000000000000000), C64(0x0000000000000000)
};

const U64 BPAWN_CAPTURES[64] = {
    C64(0x0000000000000000), C64(0x0000000000000000), C64(0x0000000000000000), C64(0x0000000000000000),
    C64(0x0000000000000000), C64(0x0000000000000000), C64(0x0000000000000000), C64(0x0000000000000000),
    C64(0x0000000000000002), C64(0x0000000000000005), C64(0x000000000000000A), C64(0x0000000000000014),
    C64(0x0000000000000028), C64(0x0000000000000050), C64(0x00000000000000A0), C64(0x0000000000000040),
    C64(0x0000000000000200), C64(0x0000000000000500), C64(0x0000000000000A00), C64(0x0000000000001400),
    C64(0x0000000000002800), C64(0x0000000000005000), C64(0x000000000000A000), C64(0x0000000000004000),
    C64(0x0000000000020000), C64(0x0000000000050000), C64(0x00000000000A0000), C64(0x0000000000140000),
    C64(0x0000000000280000), C64(0x0000000000500000), C64(0x0000000000A00000), C64(0x0000000000400000),
    C64(0x0000000002000000), C64(0x0000000005000000), C64(0x000000000A000000), C64(0x0000000014000000),
    C64(0x0000000028000000), C64(0x0000000050000000), C64(0x00000000A0000000), C64(0x0000000040000000),
    C64(0x0000000200000000), C64(0x0000000500000000), C64(0x0000000A00000000), C64(0x0000001400000000),
    C64(0x0000002800000000), C64(0x0000005000000000), C64(0x000000A000000000), C64(0x0000004000000000),
    C64(0x0000020000000000), C64(0x0000050000000000), C64(0x00000A0000000000), C64(0x0000140000000000),
    C64(0x0000280000000000), C64(0x0000500000000000), C64(0x0000A00000000000), C64(0x0000400000000000),
    C64(0x0002000000000000), C64(0x0005000000000000), C64(0x000A000000000000), C64(0x0014000000000000),
    C64(0x0028000000000000), C64(0x0050000000000000), C64(0x00A0000000000000), C64(0x0040000000000000)
};

const U64 KING_ZONE[64] = {
    C64(0x0000000000030303), C64(0x0000000000070707), C64(0x00000000000e0e0e), C64(0x00000000001c1c1c),
    C64(0x0000000000383838), C64(0x0000000000707070), C64(0x0000000000e0e0e0), C64(0x0000000000c0c0c0),
    C64(0x0000000003030303), C64(0x0000000007070707), C64(0x000000000e0e0e0e), C64(0x000000001c1c1c1c),
    C64(0x0000000038383838), C64(0x0000000070707070), C64(0x00000000e0e0e0e0), C64(0x00000000c0c0c0c0),
    C64(0x0000000303030303), C64(0x0000000707070707), C64(0x0000000e0e0e0e0e), C64(0x0000001c1c1c1c1c),
    C64(0x0000003838383838), C64(0x0000007070707070), C64(0x000000e0e0e0e0e0), C64(0x000000c0c0c0c0c0),
    C64(0x0000030303030300), C64(0x0000070707070700), C64(0x00000e0e0e0e0e00), C64(0x00001c1c1c1c1c00),
    C64(0x0000383838383800), C64(0x0000707070707000), C64(0x0000e0e0e0e0e000), C64(0x0000c0c0c0c0c000),
    C64(0x0003030303030000), C64(0x0007070707070000), C64(0x000e0e0e0e0e0000), C64(0x001c1c1c1c1c0000),
    C64(0x0038383838380000), C64(0x0070707070700000), C64(0x00e0e0e0e0e00000), C64(0x00c0c0c0c0c00000),
    C64(0x0303030303000000), C64(0x0707070707000000), C64(0x0e0e0e0e0e000000), C64(0x1c1c1c1c1c000000),
    C64(0x3838383838000000), C64(0x7070707070000000), C64(0xe0e0e0e0e0000000), C64(0xc0c0c0c0c0000000),
    C64(0x0303030300000000), C64(0x0707070700000000), C64(0x0e0e0e0e00000000), C64(0x1c1c1c1c00000000),
    C64(0x3838383800000000), C64(0x7070707000000000), C64(0xe0e0e0e000000000), C64(0xc0c0c0c000000000),
    C64(0x0303030000000000), C64(0x0707070000000000), C64(0x0e0e0e0000000000), C64(0x1c1c1c0000000000),
    C64(0x3838380000000000), C64(0x7070700000000000), C64(0xe0e0e00000000000), C64(0xc0c0c00000000000)
};

namespace magic {

    /*
     * Magic Stuff
     * @Credits Pradyumna Kannanin
     */

    const int _MAGIC_MOVES_ROOK_SHIFT[64] = {
        52, 53, 53, 53, 53, 53, 53, 52,
        53, 54, 54, 54, 54, 54, 54, 53,
        53, 54, 54, 54, 54, 54, 54, 53,
        53, 54, 54, 54, 54, 54, 54, 53,
        53, 54, 54, 54, 54, 54, 54, 53,
        53, 54, 54, 54, 54, 54, 54, 53,
        53, 54, 54, 54, 54, 54, 54, 53,
        53, 54, 54, 53, 53, 53, 53, 53
    };

    const U64 _MAGIC_MOVES_ROOK_MAGICS[64] = {
        C64(0x0080001020400080), C64(0x0040001000200040), C64(0x0080081000200080), C64(0x0080040800100080),
        C64(0x0080020400080080), C64(0x0080010200040080), C64(0x0080008001000200), C64(0x0080002040800100),
        C64(0x0000800020400080), C64(0x0000400020005000), C64(0x0000801000200080), C64(0x0000800800100080),
        C64(0x0000800400080080), C64(0x0000800200040080), C64(0x0000800100020080), C64(0x0000800040800100),
        C64(0x0000208000400080), C64(0x0000404000201000), C64(0x0000808010002000), C64(0x0000808008001000),
        C64(0x0000808004000800), C64(0x0000808002000400), C64(0x0000010100020004), C64(0x0000020000408104),
        C64(0x0000208080004000), C64(0x0000200040005000), C64(0x0000100080200080), C64(0x0000080080100080),
        C64(0x0000040080080080), C64(0x0000020080040080), C64(0x0000010080800200), C64(0x0000800080004100),
        C64(0x0000204000800080), C64(0x0000200040401000), C64(0x0000100080802000), C64(0x0000080080801000),
        C64(0x0000040080800800), C64(0x0000020080800400), C64(0x0000020001010004), C64(0x0000800040800100),
        C64(0x0000204000808000), C64(0x0000200040008080), C64(0x0000100020008080), C64(0x0000080010008080),
        C64(0x0000040008008080), C64(0x0000020004008080), C64(0x0000010002008080), C64(0x0000004081020004),
        C64(0x0000204000800080), C64(0x0000200040008080), C64(0x0000100020008080), C64(0x0000080010008080),
        C64(0x0000040008008080), C64(0x0000020004008080), C64(0x0000800100020080), C64(0x0000800041000080),
        C64(0x00FFFCDDFCED714A), C64(0x007FFCDDFCED714A), C64(0x003FFFCDFFD88096), C64(0x0000040810002101),
        C64(0x0001000204080011), C64(0x0001000204000801), C64(0x0001000082000401), C64(0x0001FFFAABFAD1A2)
    };

    const U64 _MAGIC_MOVES_ROOK_MASK[64] = {
        C64(0x000101010101017E), C64(0x000202020202027C), C64(0x000404040404047A), C64(0x0008080808080876),
        C64(0x001010101010106E), C64(0x002020202020205E), C64(0x004040404040403E), C64(0x008080808080807E),
        C64(0x0001010101017E00), C64(0x0002020202027C00), C64(0x0004040404047A00), C64(0x0008080808087600),
        C64(0x0010101010106E00), C64(0x0020202020205E00), C64(0x0040404040403E00), C64(0x0080808080807E00),
        C64(0x00010101017E0100), C64(0x00020202027C0200), C64(0x00040404047A0400), C64(0x0008080808760800),
        C64(0x00101010106E1000), C64(0x00202020205E2000), C64(0x00404040403E4000), C64(0x00808080807E8000),
        C64(0x000101017E010100), C64(0x000202027C020200), C64(0x000404047A040400), C64(0x0008080876080800),
        C64(0x001010106E101000), C64(0x002020205E202000), C64(0x004040403E404000), C64(0x008080807E808000),
        C64(0x0001017E01010100), C64(0x0002027C02020200), C64(0x0004047A04040400), C64(0x0008087608080800),
        C64(0x0010106E10101000), C64(0x0020205E20202000), C64(0x0040403E40404000), C64(0x0080807E80808000),
        C64(0x00017E0101010100), C64(0x00027C0202020200), C64(0x00047A0404040400), C64(0x0008760808080800),
        C64(0x00106E1010101000), C64(0x00205E2020202000), C64(0x00403E4040404000), C64(0x00807E8080808000),
        C64(0x007E010101010100), C64(0x007C020202020200), C64(0x007A040404040400), C64(0x0076080808080800),
        C64(0x006E101010101000), C64(0x005E202020202000), C64(0x003E404040404000), C64(0x007E808080808000),
        C64(0x7E01010101010100), C64(0x7C02020202020200), C64(0x7A04040404040400), C64(0x7608080808080800),
        C64(0x6E10101010101000), C64(0x5E20202020202000), C64(0x3E40404040404000), C64(0x7E80808080808000)
    };

    const unsigned int _MAGIC_MOVES_BISHOP_SHIFT[64] = {
        58, 59, 59, 59, 59, 59, 59, 58,
        59, 59, 59, 59, 59, 59, 59, 59,
        59, 59, 57, 57, 57, 57, 59, 59,
        59, 59, 57, 55, 55, 57, 59, 59,
        59, 59, 57, 55, 55, 57, 59, 59,
        59, 59, 57, 57, 57, 57, 59, 59,
        59, 59, 59, 59, 59, 59, 59, 59,
        58, 59, 59, 59, 59, 59, 59, 58
    };

    const U64 _MAGIC_MOVES_BISHOP_MAGICS[64] = {
        C64(0x0002020202020200), C64(0x0002020202020000), C64(0x0004010202000000), C64(0x0004040080000000),
        C64(0x0001104000000000), C64(0x0000821040000000), C64(0x0000410410400000), C64(0x0000104104104000),
        C64(0x0000040404040400), C64(0x0000020202020200), C64(0x0000040102020000), C64(0x0000040400800000),
        C64(0x0000011040000000), C64(0x0000008210400000), C64(0x0000004104104000), C64(0x0000002082082000),
        C64(0x0004000808080800), C64(0x0002000404040400), C64(0x0001000202020200), C64(0x0000800802004000),
        C64(0x0000800400A00000), C64(0x0000200100884000), C64(0x0000400082082000), C64(0x0000200041041000),
        C64(0x0002080010101000), C64(0x0001040008080800), C64(0x0000208004010400), C64(0x0000404004010200),
        C64(0x0000840000802000), C64(0x0000404002011000), C64(0x0000808001041000), C64(0x0000404000820800),
        C64(0x0001041000202000), C64(0x0000820800101000), C64(0x0000104400080800), C64(0x0000020080080080),
        C64(0x0000404040040100), C64(0x0000808100020100), C64(0x0001010100020800), C64(0x0000808080010400),
        C64(0x0000820820004000), C64(0x0000410410002000), C64(0x0000082088001000), C64(0x0000002011000800),
        C64(0x0000080100400400), C64(0x0001010101000200), C64(0x0002020202000400), C64(0x0001010101000200),
        C64(0x0000410410400000), C64(0x0000208208200000), C64(0x0000002084100000), C64(0x0000000020880000),
        C64(0x0000001002020000), C64(0x0000040408020000), C64(0x0004040404040000), C64(0x0002020202020000),
        C64(0x0000104104104000), C64(0x0000002082082000), C64(0x0000000020841000), C64(0x0000000000208800),
        C64(0x0000000010020200), C64(0x0000000404080200), C64(0x0000040404040400), C64(0x0002020202020200)
    };

    const U64 _MAGIC_MOVES_BISHOP_MASK[64] = {
        C64(0x0040201008040200), C64(0x0000402010080400), C64(0x0000004020100A00), C64(0x0000000040221400),
        C64(0x0000000002442800), C64(0x0000000204085000), C64(0x0000020408102000), C64(0x0002040810204000),
        C64(0x0020100804020000), C64(0x0040201008040000), C64(0x00004020100A0000), C64(0x0000004022140000),
        C64(0x0000000244280000), C64(0x0000020408500000), C64(0x0002040810200000), C64(0x0004081020400000),
        C64(0x0010080402000200), C64(0x0020100804000400), C64(0x004020100A000A00), C64(0x0000402214001400),
        C64(0x0000024428002800), C64(0x0002040850005000), C64(0x0004081020002000), C64(0x0008102040004000),
        C64(0x0008040200020400), C64(0x0010080400040800), C64(0x0020100A000A1000), C64(0x0040221400142200),
        C64(0x0002442800284400), C64(0x0004085000500800), C64(0x0008102000201000), C64(0x0010204000402000),
        C64(0x0004020002040800), C64(0x0008040004081000), C64(0x00100A000A102000), C64(0x0022140014224000),
        C64(0x0044280028440200), C64(0x0008500050080400), C64(0x0010200020100800), C64(0x0020400040201000),
        C64(0x0002000204081000), C64(0x0004000408102000), C64(0x000A000A10204000), C64(0x0014001422400000),
        C64(0x0028002844020000), C64(0x0050005008040200), C64(0x0020002010080400), C64(0x0040004020100800),
        C64(0x0000020408102000), C64(0x0000040810204000), C64(0x00000A1020400000), C64(0x0000142240000000),
        C64(0x0000284402000000), C64(0x0000500804020000), C64(0x0000201008040200), C64(0x0000402010080400),
        C64(0x0002040810204000), C64(0x0004081020400000), C64(0x000A102040000000), C64(0x0014224000000000),
        C64(0x0028440200000000), C64(0x0050080402000000), C64(0x0020100804020000), C64(0x0040201008040200)
    };

#define _MINIMAL_B_BITS_SHIFT(square) 55
#define _MINIMAL_R_BITS_SHIFT(square) 52

    extern U64 _MAGIC_MOVES_BISHOP_DB[64][1 << 9];
    extern U64 _MAGIC_MOVES_ROOK_DB[64][1 << 12];

    /**
     * Return Bishop Moves given a square and board occupancy
     * @param sq the square
     * @param occ occupancy bitboard
     * @return bitboard populated with bishop moves
     */
    inline U64 bishop_moves(const unsigned int sq, const U64 occ) {
        return _MAGIC_MOVES_BISHOP_DB[sq][(((occ) & _MAGIC_MOVES_BISHOP_MASK[sq]) * _MAGIC_MOVES_BISHOP_MAGICS[sq]) >> _MINIMAL_B_BITS_SHIFT(sq)];
    }

    /**
     * Return Rook Moves given a square and board occupancy
     * @param sq the square
     * @param occ occupancy bitboard
     * @return bitboard populated with rook moves
     */
    inline U64 rook_moves(const unsigned int sq, const U64 occ) {
        return _MAGIC_MOVES_ROOK_DB[sq][(((occ) & _MAGIC_MOVES_ROOK_MASK[sq]) * _MAGIC_MOVES_ROOK_MAGICS[sq]) >> _MINIMAL_R_BITS_SHIFT(sq)];
    }

    /**
     * Return Queen Moves given a square and board occupancy
     * @param sq the square
     * @param occ occupancy bitboard
     * @return bitboard populated with queen moves
     */
    inline U64 queen_moves(const unsigned int sq, const U64 occ) {
        return bishop_moves(sq, occ) | rook_moves(sq, occ);
    }

    void init(void); //initialize magic moves (required)

}

#endif //_bbmovesh
