/**
 * Maxima, a chess playing program. 
 * Copyright (C) 1996-2015 Erik van het Hof and Hermen Reitsma 
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *  
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *  
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, If not, see <http://www.gnu.org/licenses/>.
 *  
 * File: pst.h
 * Piece Square Tables to include in the evaluation function
 */

#ifndef PST_H
#define	PST_H

int8_t PST_PAWN_MG[64] = {
     0,   0,   0,   0,   0,   0,   0,   0,
   -15,   0,   5,  10,  10,   5,   0, -15,
   -15,   0,   5,  10,  10,   5,   0, -15,
   -15,   0,   5,  15,  15,   5,   0, -15,
   -15,   0,   5,  20,  20,   5,   0, -15,
   -15,   0,   5,  15,  15,   5,   0, -15,
   -15,   0,   5,  10,  10,   5,   0, -15,
     0,   0,   0,   0,   0,   0,   0,   0
};

int8_t PST_PAWN_EG[64] = {
     0,   0,   0,   0,   0,   0,   0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,
     0,   0,   0,   0,   0,   0,   0,   0
};

int8_t PST_KNIGHT_MG[64] = {
   -30, -20, -15, -10, -10, -15, -20, -30,
   -15,  -5,   0,   5,   5,   0,  -5, -15,
     0,  10,  15,  20,  20,  15,  10,   0,
    -5,   5,  10,  15,  15,  10,   5,  -5,
   -10,   0,   5,  10,  10,   5,   0, -10,
   -20, -10,  -5,   0,   0,  -5, -10, -20,
   -30, -20, -15, -10, -10, -15, -20, -30,
   -40, -30, -25, -20, -20, -25, -30, -40
};

int8_t PST_KNIGHT_EG[64] = {
   -35, -25, -20, -15, -15, -20, -25, -35,
   -25, -15, -10,  -5,  -5, -10, -15, -25,
   -15,  -5,   0,   5,   5,   0,  -5, -15,
    -5,   5,  10,  15,  15,  10,   5,  -5,
    -5,   5,  10,  15,  15,  10,   5,  -5,
   -15,  -5,   0,   5,   5,   0,  -5, -15,
   -25, -15, -10,  -5,  -5, -10, -15, -25,
   -35, -25, -20, -15, -15, -20, -25, -35
};

int8_t PST_BISHOP_MG[64] = {
     0,   5,   0, -10, -10,   0,   5,   0,
     0,  10,   5,   0,   0,   5,  10,   0,
     0,   5,  10,   5,   5,  10,   0,   0,
    -5,   0,   5,  10,  10,   5,   0,  -5,
    -5,   0,   5,  10,  10,   5,   0,  -5,
     0,   5,  10,   5,   5,  10,   5,   0,
     0,  10,   5,   0,   0,   5,  10,   0,
     0,   5,   0, -10, -10,   0,   5,   0
};

int8_t PST_BISHOP_EG[64] = {
     0,   5,   0,  -5,  -5,   0,   5,   0,
     0,  10,   5,   0,   0,   5,  10,   0,
     0,   5,  10,   5,   5,  10,   0,   0,
    -5,   0,   5,  15,  15,   5,   0,  -5,
    -5,   0,   5,  15,  15,   5,   0,  -5,
     0,   5,  10,   5,   5,  10,   5,   0,
     0,  10,   5,   0,   0,   5,  10,   0,
     0,   5,   0,  -5,  -5,   0,   5,   0
};

int8_t PST_ROOK_MG[64] = {
      0,    0,   0,   0,   0,   0,    0,    0,
      0,    0,   0,   0,   0,   0,    0,    0,
      0,    0,   0,   0,   0,   0,    0,    0,
      0,    0,   0,   0,   0,   0,    0,    0,
      0,    0,   0,   0,   0,   0,    0,    0,
      0,    0,   0,   0,   0,   0,    0,    0,
      0,    0,   0,   0,   0,   0,    0,    0,
      0,    0,  10,  15,  10,  10,    0,    0
};

int8_t PST_ROOK_EG[64] = {
     0,   0,   0,   0,   0,   0,   0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,
     0,   0,   0,   0,   0,   0,   0,   0,
     0,   0,   0,   0,   0,   0,   0,   0
};

int8_t PST_QUEEN_MG[64] = {
   -10,  -5,  -5,  -5,  -5,  -5,  -5, -10,
    -5,   0,   0,   0,   0,   0,   0,  -5,
    -5,   0,   0,   0,   0,   0,   0,  -5,
    -5,   0,   0,   5,   5,   0,   0,  -5,
    -5,   0,   0,   5,   5,   0,   0,  -5,
    -5,   0,   0,   0,   0,   0,   0,  -5,
    -5,   0,   0,   0,   0,   0,   0,  -5,
   -10,  -5,  -5,  -5,  -5,  -5,  -5, -10
};

int8_t PST_QUEEN_EG[64] = {
   -30, -20, -15, -10, -10, -15, -20, -30,
   -20, -10,   0,   0,   0,   0, -10, -20,
   -15,  -5,   0,   5,   5,   0,  -5, -15,
   -10,   0,   5,  10,  10,   5,   0, -10,
   -10,   0,   5,  10,  10,   5,   0, -10,
   -15,  -5,   0,   5,   5,   0,  -5, -15,
   -20, -10,   0,   0,   0,   0, -10, -20
   -30, -20, -15, -10, -10, -15, -20, -30
};

int8_t PST_KING_MG[64] = {
   -25, -30, -35, -40, -40, -35, -30, -25,
   -25, -30, -35, -40, -40, -35, -30, -25,
   -25, -30, -35, -40, -40, -35, -30, -25,
   -20, -25, -30, -35, -35, -30, -25, -20,
   -15, -20, -25, -30, -30, -25, -20, -15,
   -10, -15, -20, -25, -25, -20, -15, -10,
     0,  -5, -10, -20, -20, -15,  -5,   0,
     0,   0,  -5, -15, -15, -10,   0,   0
};

int8_t PST_KING_EG[64] = {
     -35, -15,  -5,   0,   0,  -5, -15, -35,
     -15,   5,  15,  20,  20,  15,   5, -15,
      -5,  15,  25,  30,  30,  25,  15,  -5,
       5,  25,  35,  40,  40,  35,  25,   5,
       0,  20,  30,  35,  35,  30,  20,   0,
     -10,  10,  20,  25,  25,  20,  10, -10,
     -20,   0,  10,  15,  15,  10,   0, -20,
     -40, -20, -10,  -5,  -5, -10, -20, -40
};

#endif	/* PST_H */

